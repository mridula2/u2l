#!/usr/bin/perl
#
# $Header: /data/cvsrepo/assess-tools/bin/8002_make-charlist,v 1.3 2014/04/01 02:24:20 morimoto Exp $
# $Name: rev_1_10 $
#
# Tool name : 8002_make-charlist
# Overview     : 8001_char-memcheck, Code Advisor の出力結果から重複箇所を削除して、目視対象を絞る
# Usage : 8002_make-charlist  log1 log2
# Input     : log1 : 8001_char-memcheck 出力結果ファイル
#          : log2 : Code Advisor 詳細レポートファイル
# Output     : 以下のフォーマットで出力 (8001_make-charlistと同じ)
#            <ファイル名>:<行番号>:<内容>:<cppcheckメッセージ>

if ( $#ARGV != 1 ) {
	print STDERR "Usage : $0 log1 log2\n";
	print STDERR "   log1 : char_memcheck log file.\n";
	print STDERR "   log2 : Code Advisor detail report file.\n";
	exit 1;
}

my $chmem=$ARGV[0];
my $file=$ARGV[1];
my @filenames;
my @nums;

open(my $fh, "grep -e '#20200-D' -e '#20206-D' $file | ") || die "Can't open $file";

while(<$fh>) {
	if ( /"(.*)", line (.*), procedure .*: warning/ ) {
		push(@filenames, $1);
		push(@nums, $2);
	}
}
close($fh);

open(my $fh1, "$chmem") || die "Can't open $chmem";

while(<$fh1>) {
	my @a = split(/	/, $_);
	my $ok = 0;
	for(my $i=0;$i<=$#filenames;$i++) {
#		print "$filenames[$i]\t$a[0]\n";
		if ( index($filenames[$i], $a[0]) >= 0 ) {
#			print "$a[0]\n";
			if ( $nums[$i] == $a[1] ) {
				$ok = 1;
			}
		}
	}
#	if ( $a[2] eq "struct" ) {
#		print "OK $_\n";
#	}
	if ( $ok == 0 ) {
		print STDOUT $_;
	} else {
		print STDERR $_;
	}
}
close($fh1);
