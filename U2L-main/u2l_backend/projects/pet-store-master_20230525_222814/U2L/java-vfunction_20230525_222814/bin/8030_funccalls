#!/bin/sh
#
# $Header: /data/cvsrepo/assess-tools/bin/8030_funccalls,v 1.5 2014/04/01 02:28:13 morimoto Exp $
# $Name: rev_1_10 $
#
# name     : 8030_funccalls
# desc     : counts source lines which contains the function name(memset,memcpy,strcpy etc...)
# usage    : 8030_funccalls
# input    : file_list : C assessment target file list.
# output   : print to stdout in the following format
#            <funcname>:<frequency>
#            and prints the count of sprintf() functions which has numerical length format (ex: %10s)
# example  :
#           $ 8030_funccalls .
#           memset:2241
#           memcpy:2931
#           sprintf:1924
#           ....
#
#           ### sprintf including numerical length in format(ex: "%10s") : 195
#

if [  $# -ne 1 ];
then
        echo "Usage : `basename $0` file_list"
        exit 1
else
        file_list=$1
fi

echo "### 8030_funccalls start:"
echo "### curdir: $PWD"
echo "### file_list: $file_list"
echo "### num of files: `cat $file_list | wc -l`"
echo

FUNC="memset memcpy strcpy strncpy sprintf snprintf memccpy gets fgets fread bzero scanf fscanf sscanf vsprintf vsnprintf"

for i in `echo $FUNC`
do
	echo "$i:\c"
	cat $file_list | xargs perl -ne '$_=~s/\t/ /g; print "'$i'\t$ARGV\t$.\t$_" if /'$i'\s*\(/' | wc -l
done

### sprintf count (cppcheck only checks "sprintf()" whose arg2 has numeric length param like "%10s")
echo
echo "### sprintf including numerical length in format(ex: "%10s") : \c"
cat $file_list | xargs perl -ne '$_=~s/\t/ /g; print "sprintf-num\t$ARGV\t$.\t$_" if /sprintf\s*\(\s*([^,]+?)\s*,\s*([^,]+),/ && "$2" =~ /%.*[0-9]+([sduoxXeEfgGb]|l[duoxXf]|h[du])/' | wc -l

echo "### 8030_funccalls finished."
exit 0

